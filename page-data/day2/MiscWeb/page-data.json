{"componentChunkName":"component---src-pages-day-2-misc-web-index-mdx","path":"/day2/MiscWeb/","result":{"pageContext":{"frontmatter":{"title":"OpenShift Platform Day2 - Miscellaneous - Web Console Access","description":"OCP Day2 Miscellaneous - Web Console Access","keywords":"ocp, day2, misc, web"},"relativePagePath":"/day2/MiscWeb/index.mdx","titleType":"page","MdxNode":{"id":"af0ece2b-de70-5ee2-a131-fb0c90093509","children":[],"parent":"9d037e8b-0c9d-5941-827f-94f9493b8896","internal":{"content":"---\ntitle: OpenShift Platform Day2 - Miscellaneous - Web Console Access\ndescription: OCP Day2 Miscellaneous - Web Console Access\nkeywords: 'ocp, day2, misc, web'\n---\n\n# Web Console Access Overview\nThe OpenShift Container Platform web console is a user interface accessible from a web browser. Developers can use the web console to visualize, browse, and manage the contents of projects.  \nAfter your OCP installation is completed then you can immediately access the Web Console.  In fact, the OCP installation script will display how access the webconsole as part of the installation complete message.  \n\nTo see more information please see the [Online documentation of the webconsole](https://docs.openshift.com/container-platform/4.3/web-console/web-console.html)\n\n\n\n# Day 1 Platform\nAs Day 1 tasks (or a preparation of the Day 2 tasks), you need to prepare the certificate for the URL of Web Console. During the installation, the self-singed certificate for the URL of Web console access will be generated.\n\n\n\n\n# Day 2 Platform\nWe can modify and customize the OpenShift Web Console.  We can also disable it.\n- [Configuring the web console](#configuring-the-web-console): You can modify the OpenShift Container Platform web console\n- [Customizing the web console](#Customizing-the-web-console): You can customize the OpenShift Container Platform web console\n- [Managing Developer access (user permissions)](#Managing-Developer-access): Based on the RBAC rules, you can disable/enable capabilities on the Web console\n- [Disabling the web console](#Disabling-the-web-console): You can disable the OpenShift Container Platform web console\n- [Updating the certificate for the web console URL](#Updating-the-cert-for-the-web-console): You can replace the default certificate of the web console URL.\n\n# Day 1 Application\nN/A \n\n# Day 2 Application\n- [Developer Console](#The-Developer-perspective): The Developer perspective provides workflows specific to developer use cases\n\n# Mapping to Personas\n\nPersona | Day 2 Tasks\n--- | ---\nSRE | Configuring the web console\nSRE | Customizing the web console\nSRE | Updating the certificate for the web console URL\nSRE | Disabling the web console \nDevOps/SRE | The Developer perspective\n\n\n\n\n<a name=\"Configuring-the-web-console\"></a>\n\n## Configuring the web console \nYou can modify the OpenShift Container Platform web console to set a logout redirect URL or disable the console by editing the console.config.openshift.io resource.  \n\n\nhttps://docs.openshift.com/container-platform/4.3/web_console/configuring-web-console.html  \n\n\n\n<a name=\"Customizing-the-web-console\"></a>\n\n## Customizing the web console \nYou can customize the OpenShift Container Platform web console including the followings:\n- Adding a custom logo and product name\n- Creating custom links in the web console\n- Defining a template for an external log link\n- Creating custom notification banners\n- Customizing CLI downloads\n- Adding YAML examples to Kubernetes resources\n\nIt is especially helpful if you need to tailor the web console to meet specific corporate or government requirements.\n\n\nhttps://docs.openshift.com/container-platform/4.3/web_console/customizing-the-web-console.html  \n\n\n\n<a name=\"The-Developer-perspective\"></a>\n\n## The Developer perspective \nThe OpenShift Container Platform web console provides two perspectives; the Administrator perspective and the Developer perspective. \nThe Developer perspective provides workflows specific to developer use cases, such as the ability to:\n- Create and deploy applications on OpenShift Container Platform by importing existing codebases, images, and dockerfiles.\n- Visually interact with applications, components, and services associated with them within a project and monitor their deployment and build status.\n- Group components within an application and connect the components within and across applications.\n- Integrate serverless capabilities (Technology Preview).\n- Create workspaces to edit your application code using Eclipse Che.\n\n\nhttps://docs.openshift.com/container-platform/4.3/web_console/odc-about-developer-perspective.html  \n\n\n\n<a name=\"Managing-Developer-access\"></a>\n\n## Managing Developer access (User permissions)\nYou can manage what capabilities are enabled/disabled on the Web console for the DevOps engineer based on the RBAC rules.\nFor example, with the no-privileged user's default settings, there is no \"Monitoring\" and \"Compute\" menu in the Administrator view.\n![webconsole_diff_1](/assets/img/day2/webconsole_diff_1.png)\n\nYou can find the default user permissions in [here](https://github.ibm.com/CASE/OCP-Day2-operations/blob/master/UserManagement/rbac/default_user_permissions.md). \n\nYou can find out the information about the RBAC in [here](https://github.ibm.com/CASE/OCP-Day2-operations/blob/master/UserManagement/README.md).  \n\n\n\n\n<a name=\"Updating-the-cert-for-the-web-console\"></a>\n\n## Updating the certificate for the web console URL\nWhen you build an OpenShift 4 cluster, a self-signed certificate is applied to HTTPS endpoints such as the Web Console and API server by default.  \nTherefore, a certificate verification error occurs when accessing with a browser or the oc command, and it is necessary to perform an operation of \"permit access to potentially insecure endpoints\", so in operations such as a production environment, it is not a good idea to keep using as it is.   \nIn other words, you would replace it with a formal certificate if necessary.  \nIn addition to the certificate corresponding to the API server (api. <OpenShift 4 cluster domain>), the certificate requires a wildcard certificate (* .apps. <OpenShift 4 cluster domain>) corresponding to Router.  \nReplacing a certificate is a very simple task. You will login to the cluster as a user with the cluster-admin role and applying the prepared formal certificate with the oc command.  \n\nSee the OpenShift official document for detailed instructions.  \nhttps://docs.openshift.com/container-platform/4.3/networking/ingress-operator.html#nw-ingress-setting-a-custom-default-certificate_configuring-ingress\n\n\n\n<a name=\"Disabling-the-web-console\"></a>\n\n## Disabling the web console \nIf you have any reason that you are not allow to use the web console of your OpenShift cluster, you can disable the OpenShift Container Platform web console by editing the console.operator.openshift.io resource.\n\nhttps://docs.openshift.com/container-platform/4.3/web_console/disabling-web-console.html  \n\n\n# Implementing Web Console\nSince Web Console in OpenShift is the feature comes with OpenShift.  Which means that the information we mentioned above are for OpenShift only.\n\n\n\n## Kubernetes\nKubernetes provides the Web Console but it is not included in OpenShift.  In other words, OpenShift Web Console contains most of features which Kubenets Web Console provides and therefore we don't need to use Kubenetes Web Console feature to manage OpenShift.  \n\nhttps://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/  \n\n\n\n## OpenShift\nInformation described in the previous sections are applicable only for OpenShift.\n\n\n\n## On IBM Cloud\nOpenShift **managed service** which is provided by **IBM Cloud** provides its unique dashbaord as well as OpenShift Web Console which we described in this document above.\n\n\n\n## With IBM Cloudpak for MCM\nN/A\n\n\n\n\n## Others\n\n**KUI**\nKUI does not come with OCP.  KUI is an open source kubernetes application.  KUI is a Visual Web Terminal that allows you to interact with multiple command line tools in order to minimize context switching and get more done in a single place.\n\nThe following is a sample of running a kubectl get pods.  It displays the output in a nice graphical format, and it provides context senstive next action.\n\nIf you click on the name of the pods then it will display the output of the kubectl desc podsname.\n\n![Kui Sample Output](/assets/img/day2/sample-kui-output.png)\n\nMore information about KUI can be found in the [KUI webpage](https://kui.tools/)\n\n\n## Other consideration\n\nn/a\n","type":"Mdx","contentDigest":"19b1c3614277d9e3decb258891bd3e41","counter":336,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"OpenShift Platform Day2 - Miscellaneous - Web Console Access","description":"OCP Day2 Miscellaneous - Web Console Access","keywords":"ocp, day2, misc, web"},"exports":{},"rawBody":"---\ntitle: OpenShift Platform Day2 - Miscellaneous - Web Console Access\ndescription: OCP Day2 Miscellaneous - Web Console Access\nkeywords: 'ocp, day2, misc, web'\n---\n\n# Web Console Access Overview\nThe OpenShift Container Platform web console is a user interface accessible from a web browser. Developers can use the web console to visualize, browse, and manage the contents of projects.  \nAfter your OCP installation is completed then you can immediately access the Web Console.  In fact, the OCP installation script will display how access the webconsole as part of the installation complete message.  \n\nTo see more information please see the [Online documentation of the webconsole](https://docs.openshift.com/container-platform/4.3/web-console/web-console.html)\n\n\n\n# Day 1 Platform\nAs Day 1 tasks (or a preparation of the Day 2 tasks), you need to prepare the certificate for the URL of Web Console. During the installation, the self-singed certificate for the URL of Web console access will be generated.\n\n\n\n\n# Day 2 Platform\nWe can modify and customize the OpenShift Web Console.  We can also disable it.\n- [Configuring the web console](#configuring-the-web-console): You can modify the OpenShift Container Platform web console\n- [Customizing the web console](#Customizing-the-web-console): You can customize the OpenShift Container Platform web console\n- [Managing Developer access (user permissions)](#Managing-Developer-access): Based on the RBAC rules, you can disable/enable capabilities on the Web console\n- [Disabling the web console](#Disabling-the-web-console): You can disable the OpenShift Container Platform web console\n- [Updating the certificate for the web console URL](#Updating-the-cert-for-the-web-console): You can replace the default certificate of the web console URL.\n\n# Day 1 Application\nN/A \n\n# Day 2 Application\n- [Developer Console](#The-Developer-perspective): The Developer perspective provides workflows specific to developer use cases\n\n# Mapping to Personas\n\nPersona | Day 2 Tasks\n--- | ---\nSRE | Configuring the web console\nSRE | Customizing the web console\nSRE | Updating the certificate for the web console URL\nSRE | Disabling the web console \nDevOps/SRE | The Developer perspective\n\n\n\n\n<a name=\"Configuring-the-web-console\"></a>\n\n## Configuring the web console \nYou can modify the OpenShift Container Platform web console to set a logout redirect URL or disable the console by editing the console.config.openshift.io resource.  \n\n\nhttps://docs.openshift.com/container-platform/4.3/web_console/configuring-web-console.html  \n\n\n\n<a name=\"Customizing-the-web-console\"></a>\n\n## Customizing the web console \nYou can customize the OpenShift Container Platform web console including the followings:\n- Adding a custom logo and product name\n- Creating custom links in the web console\n- Defining a template for an external log link\n- Creating custom notification banners\n- Customizing CLI downloads\n- Adding YAML examples to Kubernetes resources\n\nIt is especially helpful if you need to tailor the web console to meet specific corporate or government requirements.\n\n\nhttps://docs.openshift.com/container-platform/4.3/web_console/customizing-the-web-console.html  \n\n\n\n<a name=\"The-Developer-perspective\"></a>\n\n## The Developer perspective \nThe OpenShift Container Platform web console provides two perspectives; the Administrator perspective and the Developer perspective. \nThe Developer perspective provides workflows specific to developer use cases, such as the ability to:\n- Create and deploy applications on OpenShift Container Platform by importing existing codebases, images, and dockerfiles.\n- Visually interact with applications, components, and services associated with them within a project and monitor their deployment and build status.\n- Group components within an application and connect the components within and across applications.\n- Integrate serverless capabilities (Technology Preview).\n- Create workspaces to edit your application code using Eclipse Che.\n\n\nhttps://docs.openshift.com/container-platform/4.3/web_console/odc-about-developer-perspective.html  \n\n\n\n<a name=\"Managing-Developer-access\"></a>\n\n## Managing Developer access (User permissions)\nYou can manage what capabilities are enabled/disabled on the Web console for the DevOps engineer based on the RBAC rules.\nFor example, with the no-privileged user's default settings, there is no \"Monitoring\" and \"Compute\" menu in the Administrator view.\n![webconsole_diff_1](/assets/img/day2/webconsole_diff_1.png)\n\nYou can find the default user permissions in [here](https://github.ibm.com/CASE/OCP-Day2-operations/blob/master/UserManagement/rbac/default_user_permissions.md). \n\nYou can find out the information about the RBAC in [here](https://github.ibm.com/CASE/OCP-Day2-operations/blob/master/UserManagement/README.md).  \n\n\n\n\n<a name=\"Updating-the-cert-for-the-web-console\"></a>\n\n## Updating the certificate for the web console URL\nWhen you build an OpenShift 4 cluster, a self-signed certificate is applied to HTTPS endpoints such as the Web Console and API server by default.  \nTherefore, a certificate verification error occurs when accessing with a browser or the oc command, and it is necessary to perform an operation of \"permit access to potentially insecure endpoints\", so in operations such as a production environment, it is not a good idea to keep using as it is.   \nIn other words, you would replace it with a formal certificate if necessary.  \nIn addition to the certificate corresponding to the API server (api. <OpenShift 4 cluster domain>), the certificate requires a wildcard certificate (* .apps. <OpenShift 4 cluster domain>) corresponding to Router.  \nReplacing a certificate is a very simple task. You will login to the cluster as a user with the cluster-admin role and applying the prepared formal certificate with the oc command.  \n\nSee the OpenShift official document for detailed instructions.  \nhttps://docs.openshift.com/container-platform/4.3/networking/ingress-operator.html#nw-ingress-setting-a-custom-default-certificate_configuring-ingress\n\n\n\n<a name=\"Disabling-the-web-console\"></a>\n\n## Disabling the web console \nIf you have any reason that you are not allow to use the web console of your OpenShift cluster, you can disable the OpenShift Container Platform web console by editing the console.operator.openshift.io resource.\n\nhttps://docs.openshift.com/container-platform/4.3/web_console/disabling-web-console.html  \n\n\n# Implementing Web Console\nSince Web Console in OpenShift is the feature comes with OpenShift.  Which means that the information we mentioned above are for OpenShift only.\n\n\n\n## Kubernetes\nKubernetes provides the Web Console but it is not included in OpenShift.  In other words, OpenShift Web Console contains most of features which Kubenets Web Console provides and therefore we don't need to use Kubenetes Web Console feature to manage OpenShift.  \n\nhttps://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/  \n\n\n\n## OpenShift\nInformation described in the previous sections are applicable only for OpenShift.\n\n\n\n## On IBM Cloud\nOpenShift **managed service** which is provided by **IBM Cloud** provides its unique dashbaord as well as OpenShift Web Console which we described in this document above.\n\n\n\n## With IBM Cloudpak for MCM\nN/A\n\n\n\n\n## Others\n\n**KUI**\nKUI does not come with OCP.  KUI is an open source kubernetes application.  KUI is a Visual Web Terminal that allows you to interact with multiple command line tools in order to minimize context switching and get more done in a single place.\n\nThe following is a sample of running a kubectl get pods.  It displays the output in a nice graphical format, and it provides context senstive next action.\n\nIf you click on the name of the pods then it will display the output of the kubectl desc podsname.\n\n![Kui Sample Output](/assets/img/day2/sample-kui-output.png)\n\nMore information about KUI can be found in the [KUI webpage](https://kui.tools/)\n\n\n## Other consideration\n\nn/a\n","fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/cloudpak8s/src/pages/day2/MiscWeb/index.mdx"}}}}